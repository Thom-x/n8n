name: Build and Push Docker Image on Version Change

on:
  schedule:
    - cron: '0 * * * *'  # Runs every hour
  workflow_dispatch:  # Allows manual triggering

jobs:
  check-and-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Convert repository owner to lowercase
      id: lowercase_owner
      run: |
        LOWERCASE_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        echo "lowercase_owner=$LOWERCASE_OWNER" >> $GITHUB_OUTPUT

    - name: Get latest image tag from GHCR
      id: get_ghcr_tag
      run: |
        RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/user/packages/container/n8n/versions)
        if [ "$RESPONSE" -eq 404 ]; then
          echo "Package not found, proceeding with build."
          echo "ghcr_tag=not_found" >> $GITHUB_OUTPUT
        else
          GHCR_TAG=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/user/packages/container/n8n/versions \
            | jq -r '.[0].metadata.container.tags[0]')
          echo "GHCR tag: $GHCR_TAG"
          echo "ghcr_tag=$GHCR_TAG" >> $GITHUB_OUTPUT
        fi

    - name: Get latest tag from remote repo
      id: get_remote_tag
      run: |
        set +e
        REMOTE_TAG=$(curl -s https://api.github.com/repos/n8n-io/n8n/tags | jq -r '.[0].name')
        if [ -z "$REMOTE_TAG" ] || [ "$REMOTE_TAG" = "null" ]; then
          echo "Failed to get remote tag. Stopping further steps."
          echo "stop_job=true" >> $GITHUB_OUTPUT
          exit 0
        fi
        echo "Remote tag: $REMOTE_TAG"
        echo "remote_tag=$REMOTE_TAG" >> $GITHUB_OUTPUT

    - name: Strip 'release/' from remote tag
      if: steps.get_remote_tag.outputs.stop_job != 'true'
      id: strip_v
      run: |
        STRIPPED_TAG=${{ steps.get_remote_tag.outputs.remote_tag }}
        STRIPPED_TAG=${STRIPPED_TAG#release/}
        echo "Stripped tag: $STRIPPED_TAG"
        echo "stripped_tag=$STRIPPED_TAG" >> $GITHUB_OUTPUT

    - name: Compare tags
      if: steps.get_remote_tag.outputs.stop_job != 'true'
      id: compare_tags
      run: |
        if [ "${{ steps.get_ghcr_tag.outputs.ghcr_tag }}" != "${{ steps.strip_v.outputs.stripped_tag }}" ]; then
          echo "Tags differ, building new image."
          echo "build=true" >> $GITHUB_OUTPUT
        else
          echo "Tags are the same, no build needed."
          echo "build=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Login to GitHub Container Registry
      if: steps.get_remote_tag.outputs.stop_job != 'true' && steps.compare_tags.outputs.build == 'true'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
          
    - name: Build and push Docker image
      if: steps.get_remote_tag.outputs.stop_job != 'true' && steps.compare_tags.outputs.build == 'true'
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ steps.lowercase_owner.outputs.lowercase_owner }}/n8n:latest
          ghcr.io/${{ steps.lowercase_owner.outputs.lowercase_owner }}/n8n:${{ steps.strip_v.outputs.stripped_tag }}
        build-args: |
          VERSION=latest # ${{ steps.strip_v.outputs.stripped_tag }}
